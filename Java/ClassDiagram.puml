@startuml
class smu.Controller.AddFamigliaController {
+ TextField nomeFamiglia
+ Button ConfermaNew
+ TextField usernameNuovoUtente
+ void createFamily(ActionEvent)
- void addUserToFamily(Integer,String)
}


class smu.DAOImplementation.SpeseProgrammateDAOimp {
+ boolean insert(SpeseProgrammate)
+ boolean update(SpeseProgrammate)
+ boolean delete(Integer)
+ SpeseProgrammate getByID(String)
+ List<SpeseProgrammate> getByUsername(String)
}

interface smu.DAO.FamigliaDAO {
~ boolean insert(Famiglia)
~ boolean update(Famiglia)
~ boolean delete(Integer)
~ Famiglia getByID(Integer)
~ List<Famiglia> getByUsername(String)
}

class smu.Controller.DeletePortafoglioController {
- String selectedWalletId
+ void initialize()
+ void removeWallet()
- void loadWalletInfo()
}


class smu.Controller.AddPortafoglioController {
- String selectedCardNumber
+ void initialize()
- void checkFormValidity()
+ void addWallet()
}


class smu.DAOImplementation.TransazioneDAOimp {
+ boolean insert(Transazione)
+ boolean update(Transazione)
+ boolean delete(String)
+ Transazione getByID(String)
+ List<Transazione> getByCardNumber(String,String)
+ List<Transazione> getByCategory(String)
+ List<Transazione> getByWalletId(String)
}

class smu.DTO.ContoCorrente {
- String NumeroConto
- String IBAN
- float Saldo
- String NomeBanca
- String BIC
- String Username
+ String getNumeroConto()
+ String getIBAN()
+ float getSaldo()
+ String getNomeBanca()
+ String getBIC()
+ String getUsername()
+ void setNumeroConto(String)
+ void setIBAN(String)
+ void setSaldo(float)
+ void setNomeBanca(String)
+ void setBIC(String)
+ void setUsername(String)
+ String toString()
}


class smu.DTO.TransazioneInPortafoglio {
- String IdTransazione
- String IdPortafoglio
+ String getIdTransazione()
+ String getIdPortafoglio()
+ void setIdTransazione(String)
+ void setIdPortafoglio(String)
+ String toString()
}


class smu.DTO.Transazione {
- String IDTransazione
- String CRO
- Float Importo
- Date Data
- Time Ora
- String Causale
- String TipoTransazione
- String Mittente
- String Destinatario
- String NumeroCarta
- String Categoria
+ String getIDTransazione()
+ String getCRO()
+ Float getImporto()
+ Date getData()
+ Time getOra()
+ String getCausale()
+ String getTipoTransazione()
+ String getMittente()
+ String getDestinatario()
+ String getCategoria()
+ void setIDTransazione(String)
+ void setCRO(String)
+ void setImporto(Float)
+ void setData(Date)
+ void setOra(Time)
+ void setCausale(String)
+ void setTipoTransazione(String)
+ void setMittente(String)
+ void setDestinatario(String)
+ void setCategoria(String)
+ String getNumeroCarta()
+ void setNumeroCarta(String)
+ String toString()
}


class smu.Controller.AddProgrammazioneController {
- ComboBox<String> CartaUtilizzata
- ComboBox<String> Frequenza
- DatePicker DataScadenza
- DatePicker DataTermine
- Button Conferma
- TextField nomeProgrammazione
- TextField Destinatario
- TextField Importo
+ void initialize()
+ void addProgrammazione(ActionEvent)
}


class smu.DTO.AssociazioneCartaPortafoglio {
- int IdPortafoglio
- String NumeroCarta
+ int getIdPortafoglio()
+ void setIdPortafoglio(int)
+ String getNumeroCarta()
+ void setNumeroCarta(String)
}


class smu.Controller.SpeseProgrammateController {
- TableView<SpeseProgrammate> TabellaProgrammazioni
- TableColumn<SpeseProgrammate,String> destinatarioColumn
- TableColumn<SpeseProgrammate,Boolean> statoColumn
- TableColumn<SpeseProgrammate,String> cartaColumn
- TableColumn<SpeseProgrammate,Float> importoColumn
- TableColumn<SpeseProgrammate,String> dataColumn
- TableColumn<SpeseProgrammate,String> dataTermineColumn
- TableColumn<SpeseProgrammate,String> nomeColumn
- TableColumn<SpeseProgrammate,String> frequenzaColumn
- SpeseProgrammateDAO speseProgrammateDAO
- Button deleteProgram
- Button NewProgram
- Button ChangeProgram
+ void initialize()
# void initializeTableView()
- void BottonePaga(SpeseProgrammate,Button)
+ void newProgrammazione(ActionEvent)
+ void changeProgrammazione(ActionEvent)
+ void deleteProgrammazione(ActionEvent)
}


class smu.DAOImplementation.CategoriaDAOimp {
+ boolean insert(Categoria)
+ boolean update(Categoria)
+ boolean delete(String)
+ List<String> getAllCategorie()
}

class smu.Controller.DeleteProgrammazioneController {
- Button Conferma
- ComboBox<String> nomeProgrammazione
- SpeseProgrammateDAO speseProgrammateDAO
+ void initialize()
+ void deleteProgrammazione(ActionEvent)
}


interface smu.DAO.ContoCorrenteDAO {
~ boolean insert(ContoCorrente)
~ boolean update(ContoCorrente)
~ boolean delete(String)
~ ContoCorrente getByAccountNumber(String)
~ List<ContoCorrente> getByUsername(String)
}

class smu.Controller.AddTransactionController {
- Button confermaButton
- ComboBox<String> tipoTransazione
- TextField nuovoImporto
- ComboBox<String> valuta
- DatePicker nuovaData
- ComboBox<String> nuovaCategoria
- TextField nuovaCausale
- TextField nuovoDaA
- ComboBox<String> numeroCarta
+ void initialize()
- void saveTransaction(ActionEvent)
- boolean validateInputs()
- float convertToEuro(float,String)
}


interface smu.DAO.SpeseProgrammateDAO {
~ boolean insert(SpeseProgrammate)
~ boolean update(SpeseProgrammate)
~ boolean delete(Integer)
~ SpeseProgrammate getByID(String)
~ List<SpeseProgrammate> getByUsername(String)
}

interface smu.DAO.UtenteDAO {
~ boolean insert(Utente)
~ boolean update(Utente)
~ boolean delete(String)
~ Utente getByUsername(String)
~ Utente checkCredentials(String,String)
}

class smu.DAOImplementation.UtenteDAOimp {
+ boolean insert(Utente)
+ boolean update(Utente)
+ boolean delete(String)
+ Utente getByUsername(String)
+ Utente checkCredentials(String,String)
}

class smu.Controller.EditPortafoglioController {
- String selectedWalletId
- String selectedCardNumber
+ void initialize()
+ void editWallet()
- void loadWalletInfo()
}


class smu.Database {
- {static} Connection instance
+ {static} Connection getConnection()
+ {static} void cleanConnection()
}


class smu.Controller.EditProgrammazioneController {
- ComboBox<String> nomeProgrammazione
- ComboBox<String> CartaUtilizzata
- TextField Destinatario
- TextField Importo
- ComboBox<String> Frequenza
- DatePicker DataScadenza
- DatePicker DataTermine
- Button Conferma
- SpeseProgrammateDAO speseProgrammateDAO
- List<SpeseProgrammate> ListaSpese
+ void initialize()
- void rimepiComboBox(List<SpeseProgrammate>)
+ void changeProgrammazione(ActionEvent)
}


class smu.Controller.HomepageController {
+ VBox SaldoDisponibile
- Label balanceLabel
- Label cardNameLabel
- Label cardNumberLabel
- Label cardTypeLabel
- Label expiryDateLabel
- Button previousCardButton
- Button nextCardButton
- Button statisticaButton
- Pane headerPane
+ VBox DatiCarta
- Button addTransactionButton
+ TableView<Transazione> transactionsTableView
- TableColumn<Transazione,String> tipoColumn
- TableColumn<Transazione,Double> importoColumn
- TableColumn<Transazione,String> dataColumn
- TableColumn<Transazione,String> causaleColumn
- TableColumn<Transazione,String> daAColumn
- TableColumn<Transazione,String> categoriaColumn
- List<Carta> carteUtente
- int currentCardIndex
+ void initialize()
- void loadUserCards()
- void showCard()
+ void loadTransactions(String)
- void handleNextCard()
- void handlePreviousCard()
+ void insertTransaction()
- void scenaReport()
}


class smu.DAOImplementation.FamigliaDAOimp {
+ boolean insert(Famiglia)
+ boolean update(Famiglia)
+ boolean delete(Integer)
+ Famiglia getByID(Integer)
+ List<Famiglia> getByUsername(String)
}

class smu.Controller.AddTransactionInWalletController {
- ComboBox<Portafoglio> idPortafoglio
- ComboBox<String> idTransazione
- TableView<Transazione> transactionsTableView
- TableColumn<Transazione,String> idColumn
- TableColumn<Transazione,String> tipoColumn
- TableColumn<Transazione,Float> importoColumn
- TableColumn<Transazione,String> dataColumn
- TableColumn<Transazione,String> causaleColumn
- TableColumn<Transazione,String> daAColumn
- TableColumn<Transazione,String> categoriaColumn
- String selectedWalletID
- String transactionId
- List<Transazione> transazioniList
+ void initialize()
- void popolaComboBoxPortafogli()
- void popolaComboBoxTransazioni()
- void checkFormValidity()
# void initializeTableView()
+ void portafoglioSelezionato(ActionEvent)
+ void inserisciTransazione()
}


class smu.DTO.Utente {
- String Username
- String Nome
- String Cognome
- String Telefono
- String Email
- String Password
+ String getUsername()
+ void setUsername(String)
+ String getNome()
+ void setNome(String)
+ String getCognome()
+ void setCognome(String)
+ String getTelefono()
+ void setTelefono(String)
+ String getEmail()
+ void setEmail(String)
+ String getPassword()
+ void setPassword(String)
+ String toString()
}


class smu.Controller.PortafoglioController {
+ Button nextWalletButton
+ Button previousWalletButton
# Button addWalletButton
# Button editWalletButton
# Button deleteWalletButton
+ Button addTransactionInWalletButton
- Label balanceLabel
# Label walletNameLabel
- Label currentWalletID
- Label currentCardNumber
- TableView<Transazione> transactionsTableView
# TextField nomePortafoglio
# ComboBox<String> IdPortafoglio
# ComboBox<String> NumeroCarta
# Button Conferma
# List<Portafoglio> personalWallets
# int currentWalletIndex
+ void initialize()
# void loadUserWallet()
# void loadUserCards()
# void showWallet()
- void loadTransactions(String)
- void handleNextWallet()
- void handlePreviousWallet()
+ void insertWallet()
+ void updateWallet()
+ void deleteWallet()
+ void insertTransactionInWallet()
}


interface smu.DAO.PortafoglioDAO {
~ boolean insert(Portafoglio)
~ boolean update(Portafoglio)
~ boolean delete(String)
~ Portafoglio getByID(String)
~ List<Portafoglio> getFamiliarByUsername(String)
~ List<Portafoglio> getPersonalByUsername(String)
~ List<Portafoglio> getByIdFamiglia(Integer)
~ String getCardNumberByWalletID(String)
}

class smu.DTO.Portafoglio {
- String IdPortafoglio
- String NomePortafoglio
- float Saldo
- String IdFamiglia
+ String getIdPortafoglio()
+ String getNomePortafoglio()
+ float getSaldo()
+ String getIdFamiglia()
+ void setIdPortafoglio(String)
+ void setNomePortafoglio(String)
+ void setSaldo(float)
+ void setIdFamiglia(String)
+ String toString()
}


class smu.DAOImplementation.TransazioneInPortafoglioDAOimp {
+ boolean insert(TransazioneInPortafoglio)
+ boolean delete(TransazioneInPortafoglio)
+ boolean update(TransazioneInPortafoglio)
+ Integer getPortafoglioByIdTransazione(String)
+ List<String> getTransazioniInPortafoglio(String)
}

class smu.DAOImplementation.PortafoglioDAOimp {
+ boolean insert(Portafoglio)
+ boolean update(Portafoglio)
+ boolean delete(String)
+ Portafoglio getByID(String)
+ List<Portafoglio> getPersonalByUsername(String)
+ List<Portafoglio> getFamiliarByUsername(String)
+ List<Portafoglio> getByIdFamiglia(Integer)
+ String getCardNumberByWalletID(String)
}

class smu.DTO.SpeseProgrammate {
- int IdSpesa
- String Periodicita
- Date DataScadenza
- float Importo
- String Destinatario
- Date FineRinnovo
- String Descrizione
- String NumeroCarta
- boolean Stato
- Button Paga
+ int getIdSpesa()
+ String getPeriodicita()
+ Date getDataScadenza()
+ float getImporto()
+ String getDestinatario()
+ Date getFineRinnovo()
+ String getDescrizione()
+ String getNumeroCarta()
+ boolean getStato()
+ Button getPaga()
+ void setIdSpesa(int)
+ void setPeriodicita(String)
+ void setDataScadenza(Date)
+ void setImporto(float)
+ void setDestinatario(String)
+ void setFineRinnovo(Date)
+ void setDescrizione(String)
+ void setNumeroCarta(String)
+ void setStato(boolean)
+ void setPaga(Button)
+ String toString()
}


class smu.Controller.MenuController {
- Button toggleButton
- Button scadenzeButton
- Button homepageButton
- Button portafoglioButton
- Button famigliaButton
- Button walletButton
- Button transactionsButton
- Button programmazioneButton
- Button logoutButton
- VBox sidePanel
- boolean isMenuVisible
+ void initialize()
+ void HomepageButton()
+ void ReportButton()
+ void ScadenzeButton()
~ void portafoglioButton()
~ void famigliaButton()
+ void btnLogout()
+ void toggleMenu()
+ void handleMouseClick(MouseEvent)
}


interface smu.DAO.AssociazioneCartaPortafoglioDAO {
+ boolean insert(AssociazioneCartaPortafoglio)
+ boolean delete(AssociazioneCartaPortafoglio)
+ boolean update(AssociazioneCartaPortafoglio)
+ String getCardNumberByID(String)
}

interface smu.DAO.UtentiInFamiglieDAO {
~ List<String> getUsersByFamilyId(Integer)
~ void removeUserFromFamily(String,Integer)
~ void addUserToFamily(Integer,String)
}

class smu.DAOImplementation.UtentiInFamiglieDAOimp {
+ List<String> getUsersByFamilyId(Integer)
+ void removeUserFromFamily(String,Integer)
+ void addUserToFamily(Integer,String)
}

class smu.Main {
- {static} Stage primaryStage
- {static} double currentWidth
- {static} double currentHeight
- {static} boolean firstPageAfterLogin
+ {static} void main(String[])
+ {static} Window getPrimaryStage()
+ void start(Stage)
+ {static} void setRoot(String)
}


class smu.Controller.Controller {
# TableColumn<Transazione,String> tipoColumn
# TableColumn<Transazione,Double> importoColumn
# TableColumn<Transazione,String> dataColumn
# TableColumn<Transazione,String> causaleColumn
# TableColumn<Transazione,String> daAColumn
# TableColumn<Transazione,String> categoriaColumn
# void showDialog(String,Button,String)
# void initializeTableView()
+ void showError(String)
}


interface smu.DAO.CategoriaDAO {
~ boolean insert(Categoria)
~ boolean update(Categoria)
~ boolean delete(String)
}

class smu.DAOImplementation.AssociazioneCartaPortafoglioDAOimp {
+ boolean insert(AssociazioneCartaPortafoglio)
+ boolean delete(AssociazioneCartaPortafoglio)
+ boolean update(AssociazioneCartaPortafoglio)
+ String getCardNumberByID(String)
}

interface smu.DAO.CartaDAO {
~ boolean insert(Carta)
~ boolean update(Carta)
~ boolean delete(String)
~ Carta getByNumeroCarta(String)
~ List<Carta> getCardsByUsername(String)
}

class smu.Sessione {
- {static} Sessione istanza
- Utente utenteLoggato
- List<Carta> carte
- List<Portafoglio> personalWallets
- List<Portafoglio> familiarWallets
- List<Famiglia> famiglie
- Carta cartaSelezionata
+ {static} Sessione getInstance()
+ void setUtenteLoggato(Utente)
+ Utente getUtenteLoggato()
- void loadUserCards()
- void loadUserPersonalWallets()
- void loadUserFamiliarWallets()
+ void loadUserFamily()
+ List<Carta> getCarteUtente()
+ List<Portafoglio> getPersonalWallets()
+ List<Famiglia> getFamilyByUsername()
+ void setCartaSelezionata(Carta)
+ Carta getCartaSelezionata()
}


class smu.DAOImplementation.ContoCorrenteDAOimp {
+ boolean insert(ContoCorrente)
+ boolean update(ContoCorrente)
+ boolean delete(String)
+ ContoCorrente getByAccountNumber(String)
+ List<ContoCorrente> getByUsername(String)
}

class smu.DTO.Carta {
- String NumeroCarta
- String NomeCarta
- Date Scadenza
- float Saldo
- String TipoCarta
- float Plafond
- String CVV
- String NumeroConto
+ String getNumeroCarta()
+ String getNomeCarta()
+ Date getScadenza()
+ float getSaldo()
+ String getTipoCarta()
+ float getPlafond()
+ String getCVV()
+ String getNumeroConto()
+ void setNumeroCarta(String)
+ void setNomeCarta(String)
+ void setScadenza(Date)
+ void setSaldo(float)
+ void setTipoCarta(String)
+ void setPlafond(float)
+ void setCVV(String)
+ void setNumeroConto(String)
+ String toString()
}


class smu.DTO.UtentiInPortafogli {
- String NomeUtente
- String IdPortafoglio
+ String getNomeUtente()
+ void setNomeUtente(String)
+ String getIdPortafoglio()
+ void setIdPortafoglio(String)
+ String toString()
}


class smu.Controller.LeaveFamigliaController {
+ ComboBox<String> nomeFamiglia
- Button Conferma
- FamigliaDAO famigliaDAO
+ void initialize()
+ void leaveFamiglia(ActionEvent)
}


class smu.DAOImplementation.CartaDAOimp {
+ boolean insert(Carta)
+ boolean update(Carta)
+ boolean delete(String)
+ Carta getByNumeroCarta(String)
+ List<Carta> getCardsByUsername(String)
}

class smu.Controller.LoginController {
- PasswordField passwordField
- TextField usernameField
- UtenteDAO userDAO
+ void initialize()
+ void login()
- Utente authenticateUser(String,String)
}


class smu.Controller.EditFamigliaController {
- TextField nuovoNome
- ComboBox<String> eliminaUtente
- TextField nuovoUtente
- Button Conferma
- ComboBox<String> nomeFamigliadaModificare
+ void initialize()
- void caricaFamiglie()
- void caricaUtentiDellaFamiglia()
+ void modificaFamiglia(ActionEvent)
- Integer getSelectedFamilyId()
}


class smu.DTO.Famiglia {
- Integer IdFamiglia
- String NomeFamiglia
+ Integer getIdFamiglia()
+ String getNomeFamiglia()
+ void setIdFamiglia(Integer)
+ void setNomeFamiglia(String)
+ String toString()
}


class smu.DTO.Categoria {
- String NomeCategoria
- String ParoleChiavi
+ String getNomeCategoria()
+ String getParoleChiavi()
+ void setNomeCategoria(String)
+ void setParoleChiavi(String)
+ String toString()
}


class smu.Controller.FamigliaController {
- HBox comboBoxContainer
- Button selectFamilyButton
- ComboBox<String> familyComboBox
- ComboBox<String> utenteComboBox
- TableView<Transazione> TabellaFamiglia
- TableColumn<Transazione,String> tipoColumn
- TableColumn<Transazione,Float> importoColumn
- TableColumn<Transazione,String> daAColumn
- TableColumn<Transazione,String> utenteColumn
- TableColumn<Transazione,String> portafoglioColumn
- Button changeFamily
- Button newFamily
- Button logoutFamily
- void initialize()
- void popolaComboBox()
# void initializeTableView()
- void aggiornaTableView()
+ void filtraPerUtente(ActionEvent)
+ void newFamiglia(ActionEvent)
+ void changeFamiglia(ActionEvent)
+ void logoutFamiglia(ActionEvent)
- void SelezionaFamiglia(ActionEvent)
- void handleMouseClick(MouseEvent)
}


interface smu.DAO.TransazioneInPortafoglioDAO {
+ boolean insert(TransazioneInPortafoglio)
+ boolean delete(TransazioneInPortafoglio)
+ boolean update(TransazioneInPortafoglio)
+ Integer getPortafoglioByIdTransazione(String)
+ List<String> getTransazioniInPortafoglio(String)
}

interface smu.DAO.TransazioneDAO {
~ boolean insert(Transazione)
~ boolean update(Transazione)
~ boolean delete(String)
~ Transazione getByID(String)
~ List<Transazione> getByCardNumber(String,String)
~ List<Transazione> getByCategory(String)
~ List<Transazione> getByWalletId(String)
}

class smu.Controller.ReportController {
+ Label LabelDati
- Label saldoIniziale
- Label saldoFinale
- Button selectButton
- ComboBox<String> cardComboBox
- ComboBox<String> monthComboBox
- ComboBox<Integer> yearComboBox
- HBox comboBoxContainer
- BarChart<String,Number> statisticheEntrate
- BarChart<String,Number> statisticheUscite
- void initialize()
- void popolaComboBox()
- void addComboBoxListeners()
- void aggiornaGrafici()
- void popolaBarChart(BarChart<String,Number>,String,String,Integer)
- float calcolaMassimo(List<Float>)
- float calcolaMinimo(List<Float>)
- float calcolaMedio(List<Float>)
- void aggiungiTooltip(XYChart.Data<String,Number>,float)
- void aggiornaSaldi(String,int)
- void aggiornaLabel()
- void SelezionaCarta(ActionEvent)
+ void handleMouseClick(MouseEvent)
- int convertiMeseInNumero(String)
}




smu.Controller.Controller <|-- smu.Controller.AddFamigliaController
smu.DAO.SpeseProgrammateDAO <|.. smu.DAOImplementation.SpeseProgrammateDAOimp
smu.Controller.PortafoglioController <|-- smu.Controller.DeletePortafoglioController
smu.Controller.PortafoglioController <|-- smu.Controller.AddPortafoglioController
smu.DAO.TransazioneDAO <|.. smu.DAOImplementation.TransazioneDAOimp
smu.Controller.SpeseProgrammateController <|-- smu.Controller.AddProgrammazioneController
smu.Controller.Controller <|-- smu.Controller.SpeseProgrammateController
smu.DAO.CategoriaDAO <|.. smu.DAOImplementation.CategoriaDAOimp
smu.Controller.SpeseProgrammateController <|-- smu.Controller.DeleteProgrammazioneController
smu.Controller.HomepageController <|-- smu.Controller.AddTransactionController
smu.DAO.UtenteDAO <|.. smu.DAOImplementation.UtenteDAOimp
smu.Controller.PortafoglioController <|-- smu.Controller.EditPortafoglioController
smu.Controller.SpeseProgrammateController <|-- smu.Controller.EditProgrammazioneController
smu.Controller.Controller <|-- smu.Controller.HomepageController
smu.DAO.FamigliaDAO <|.. smu.DAOImplementation.FamigliaDAOimp
smu.Controller.PortafoglioController <|-- smu.Controller.AddTransactionInWalletController
smu.Controller.Controller <|-- smu.Controller.PortafoglioController
smu.DAO.TransazioneInPortafoglioDAO <|.. smu.DAOImplementation.TransazioneInPortafoglioDAOimp
smu.DAO.PortafoglioDAO <|.. smu.DAOImplementation.PortafoglioDAOimp
smu.DAO.UtentiInFamiglieDAO <|.. smu.DAOImplementation.UtentiInFamiglieDAOimp
javafx.application.Application <|-- smu.Main
smu.DAO.AssociazioneCartaPortafoglioDAO <|.. smu.DAOImplementation.AssociazioneCartaPortafoglioDAOimp
smu.DAO.ContoCorrenteDAO <|.. smu.DAOImplementation.ContoCorrenteDAOimp
smu.Controller.FamigliaController <|-- smu.Controller.LeaveFamigliaController
smu.DAO.CartaDAO <|.. smu.DAOImplementation.CartaDAOimp
smu.Controller.Controller <|-- smu.Controller.LoginController
smu.Controller.AddFamigliaController <|-- smu.Controller.EditFamigliaController
smu.Controller.Controller <|-- smu.Controller.FamigliaController
@enduml